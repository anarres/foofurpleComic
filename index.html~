<!DOCTYPE html>

<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>Foofurple comics!</title>
<meta name="description" content="Make your own webcomic mash-up using amazing Creative Commons and Public Domain images.">
<link rel="icon" type="image/png" href="kittyIcon.png">
<link rel="stylesheet" type="text/css" href="kittyStyle.css">

<script type="text/javascript" src="comicSettings.js"></script>
<script type="text/javascript" src="kittyComicMetadata.js"></script>
<script type="text/javascript" src="utils/stringUtils.js"></script>
<script type="text/javascript" src="kittyComic.js"></script>
<script type="text/javascript" src="kittyComicDisplay.js"></script>
<script type="text/javascript" src="imageSave.js"></script>
<script type="text/javascript" src="utils/jscolor/jscolor.js"></script>

<script>
var images88;
var theComic;

function updateMetadata() {
    var bg = getBgMetadata(theComic.bgArt);
    var left = getLeftMetadata(theComic.leftKittyUrl);
    var right = getRightMetadata(theComic.rightKittyUrl);
    document.getElementById('imagesMetadata').innerHTML = bg + left + right;
}





function chooseKitty() {
    var myObj = document.getElementById("chooseKitty");
    if ( myObj.style.visibility === "visible" ) {
        myObj.style.visibility = "hidden";
    }
    else {
        myObj.style.visibility = "visible";
        myObj.focus();
    }
}
function chooseBackgroundImage() {
    var myObj = document.getElementById("chooseBackgroundImage");
    if ( myObj.style.visibility === "visible" ) {
        myObj.style.visibility = "hidden";
    }
    else {
        myObj.style.visibility = "visible";
        myObj.focus();
    }
}
function loadBgImages() {
    var html = "<div id=\"removeBackgroundArt\"     onClick=\"selectBackgroundArt('')\" >       <a>Remove background art</a>     </div>";

    for( var i=0; i<images88[0].bg.length; i++ ) {
        html += "<img src='";
        html += images88[0].bg[i].url;
        html += "' id='";
        html += images88[0].bg[i].url;
        html += "' class='backgroundChooser' onClick=\"selectBackgroundArt('";
        html += images88[0].bg[i].url;
        html += "')\">";
    }
    document.getElementById("chooseBackgroundImage").innerHTML = html;
}

function selectBackgroundArt(url) {

    // Un-highlight previously selected image
    var imgArray = getElementsByClassName(document, 'backgroundChooser');

    for ( var i=0; i<imgArray.length; i++ ) {
        (imgArray[i]).style.backgroundImage="url('clear.png')";
    }
    // Hightlight newly selected image
    if (url !== "") {
        document.getElementById(url).style.backgroundImage="url('yellow.png')";
    }
    // Get all divs of class backgroundArt and give them this bg image
    var divs = getElementsByClassName(document, "backgroundArt");

    for (var j=0; j<divs.length; j++) {
        var myObj = divs[j];
        var myCSS = "url('" + url + "')";
        myObj.style.backgroundImage = myCSS;
    }
    theComic.bgArt = url;
    updateMetadata();
}

function selectKitty(num, imgUrl) {
    var myClassName = "imgChooser" + num;

    // Remove bg color from previously selected image
    var imgArray = getElementsByClassName(document, myClassName);
    for ( var i=0; i<imgArray.length; i++ ) {
        (imgArray[i]).style.backgroundImage="url('clear.png')";
    }
    // Set kitty1url (global var) and Change src of all kitty1's
    if ( num === 1 ) {
        var images = getElementsByClassName(document, "kitty1");
        for (var j=0; j<images.length; j++) {   
            (images[j]).setAttribute("src", imgUrl);
        }
        document.getElementById(imgUrl).style.backgroundImage="url('yellow.png')";
        theComic.leftKittyUrl = imgUrl;
    }
    // Do the same if kitty2
    else if ( num === 2) {
        var images2 = getElementsByClassName(document, "kitty2");
        for (var k=0; k<images2.length; k++ ) {
            (images2[k]).setAttribute("src", imgUrl);
        }  
        document.getElementById(imgUrl).style.backgroundImage="url('yellow.png')";
        theComic.rightKittyUrl = imgUrl;
    }
    updateMetadata();
}

function loadCharacters() {

    // Load the character images
    var htmlLeft = "";
    var htmlRight = "";
    for( var i=0; i<images88[1].characters.length; i++ ) {
        htmlLeft += "<img src='";
        htmlLeft += images88[1].characters[i].left.url;
        htmlLeft += "' id='";
        htmlLeft += images88[1].characters[i].left.url;
        htmlLeft += "' class='imgChooser1' onclick=\"selectKitty(1, '";
        htmlLeft += images88[1].characters[i].left.url;
        htmlLeft += "')\">";

        htmlRight += "<img src='";
        htmlRight += images88[1].characters[i].right.url;
        htmlRight += "' id='";
        htmlRight += images88[1].characters[i].right.url;
        htmlRight += "' class='imgChooser2' onclick=\"selectKitty(2, '";
        htmlRight += images88[1].characters[i].right.url;
        htmlRight += "')\">";
    }
    document.getElementById("kittyLeft").innerHTML += htmlLeft;
    document.getElementById("kittyRight").innerHTML += htmlRight;
}
function getStarted() {
    theComic = new KittyComic();
    theComic.createPanel();
    theComic.createPanel();
    refreshDisplay(theComic);

    loadBgImages();
    loadCharacters();
    updateMetadata();
}
function newPanel() {
    theComic.createPanel();
    refreshDisplay(theComic);
}
function deletePanel() {
    theComic.delPanel();
    refreshDisplay(theComic);
}

function panelClickFoo(panelID) {

    // Remove class highlit from all panels
    var divsArray = getElementsByClassName(document, 'backgroundArt');

    for (var i=0; i<divsArray.length; i++) {
        divsArray[i].style.borderTop = "10px solid #bbbbbb";
    }
    var myDiv = document.getElementById(panelID);
    myDiv.style.borderTop = "10px solid #ffc405";

    theComic.setHighlight(panelID.slice(5));
}

function textareaClick(pNum, leftOrRight) {
    var lr = parseInt(leftOrRight);
    var index = parseInt(pNum) - 1;

    // Model
    theComic.setBubbleFocus(index, lr);

    // Display - textarea
    var foo = lr + 1
    var tID = "textarea" + foo + "Panel" + pNum;
    var tObj = document.getElementById(tID);
    tObj.style.height = "160px";

    // Display - bubble image
    var imgID = "leftBubble" + pNum;
    if (leftOrRight == 1) {
        imgID = "rightBubble" + pNum;
    }
    var imgObj = document.getElementById(imgID);
    var panelObj = theComic.panelsArray[index];
    setBubbleImageMax(imgObj, lr, 0);
}

function textareaBlur(pNum, leftOrRight) {
    var lr = parseInt(leftOrRight);
    var index = parseInt(pNum) - 1;    
    var myId = "textarea1Panel" + pNum;
    if (lr == 1) {
        myId = "textarea2Panel" + pNum;
    }
    var text = document.getElementById(myId).value;

    // Write the text to the model
    //alert(index);
    //alert(lr);
    //alert(text);
    theComic.setText(index, lr, text);

    // Display bubble image
    var imgID = "leftBubble" + pNum;
    if (lr == 1) {
        imgID = "rightBubble" + pNum;
    }
    var imgObj = document.getElementById(imgID);
    setBubbleImageUrl(imgObj, lr, text, 0);

    // Display - textarea
    var foo = lr + 1;
    var tID = "textarea" + foo + "Panel" + pNum;
    var tObj = document.getElementById(tID);
    setTextareaValue(tObj, text);
}

function changePanelBGColor() {
    var hexValue = "#" + document.getElementById('jscolor').value;    
    var divs = getElementsByClassName(document, 'backgroundArt');
    for (var i=0; i<divs.length; i++) {
        divs[i].style.backgroundColor = hexValue;
    }
    // Save the new value to the models
    theComic.setBgColor(document.getElementById("jscolor").value);
}

function newWebImage(n) {
    var url = document.getElementById('newImageUrl').value;
    if (n == 2) {
        url = document.getElementById('newImageFileLocation').value;
    }
    if (document.getElementById('newBgUrl').checked) {
        var myObj = {"url":url,
            "title": "?",
            "description": "",
            "artist":"?",
            "artist_website":"",
            "license":"?",
            "license_short":"?",
            "license_url":""
            }
        // Add to the metadata
        images88[0]["bg"].push(myObj);

        // Reload bg images
        loadBgImages();

        // Set new image
        selectBackgroundArt(url);
    }
    else {
        var myObj = {
            "left":
                { 
                "url":url,
                "title": "",
                "description": "",
                "artist":"",
                "artist_website":"",
                "license":"",
                "license_short":"",
                "license_url":""
                },
            "right":
                { 
                "url":url,
                "title": "",
                "description": "",
                "artist":"",
                "artist_website":"",
                "license":"",
                "license_short":"",
                "license_url":""
                }
            };
        // Add to the metadata
        images88[1]["characters"].push(myObj);

        // Reload character images
        loadCharacters();

        // Set new image
        selectKitty(1, url);
        selectKitty(2, url);
    }
    document.getElementById("addNewImage").style.visibility = 'hidden';
}

function addNewImage() {

    //alert('foo');
    // hide the selectBackgroundImage() div
    //document.getElementById("chooseBackgroundImage").style.visibility = 'hidden';
    //document.getElementById("chooseKitty").style.visibility = 'hidden';

    // show the add new image div
    document.getElementById('addNewImage').style.visibility = "visible";
}

function bmCycle(bm) {
    if (bm==0) {
        return 1;
    }
    else if (bm==1) {
        return 2;
    }
    else {
        return 0;
    }
}

function toggleBubble(n) {

    var pNum = parseInt(theComic.highlit);
    var pObj = theComic.panelsArray[pNum-1];

    if (n==1) {
        var bm = pObj.lBubbleMode;
        var newMode = bmCycle(bm);
        var text = pObj.ltext;

        // Model
        pObj.lBubbleMode = newMode;

        // Display
        var myId = "leftBubble" + theComic.highlit;
        imgObj = document.getElementById(myId);
        setBubbleImageUrl(imgObj, 0, text, newMode);
    }
    else {
        var bm = pObj.rBubbleMode;
        var newMode = bmCycle(bm);
        var text = pObj.rtext;

        // Model
        pObj.rBubbleMode = newMode;


        // Display
        var myId = "rightBubble" + theComic.highlit;
        imgObj = document.getElementById(myId);
        setBubbleImageUrl(imgObj, 1, text, newMode);
    }
}



</script>

</head>

<body onload="getStarted()">

<div id="container">

<div id="chooseKitty" class="toggleDiv" tabindex="1" onBlur="document.getElementById('chooseKitty').style.visibility='hidden'">

    <div id="kittyLeft">
        <h3>Left character:</h3>
    </div> <!--#kittyLeft-->
    <div id="kittyRight">
        <h3>Right character:</h3>
    </div> <!--#kittyRight-->
</div> <!--#chooseKitty-->

<div id="chooseBackgroundImage" class="toggleDiv" tabindex="2" onBlur="document.getElementById('chooseBackgroundImage').style.visibility='hidden'">    
</div> <!--#chooseBackgroundImage-->

<div id="controls">

    <div class="buttonFoo" onClick="newPanel()">
        <a>
            <img src="images/plus.png" style="width:20px;height:auto;" />
            <div class='buttonFooText'>
                New panel
            </div>
        </a>
    </div>

    <div class="buttonFoo" onClick="deletePanel()">
        <a>
            <img src="images/minus.png" style="width:20px;height:auto;" />
            <div class='buttonFooText'>
                Delete panel
            </div>
        </a>
    </div>

    <div id="bubbleHint" class="infoDiv invisPosFixed">
        <div class="close" title="Close this window" 
            onclick="document.getElementById('bubbleHint').style.visibility='hidden'">
            <img src="close_icon.png" alt="close">
        </div> <!--.close-->
            <img src="alert.png" alt="alert" style="float:left;height:40px;margin:15px;">
            <p style="padding: 10px 40px;">First select a comic panel by clicking on it.</p>
    </div> <!--#bubbleHint-->

    <div class="buttonFoo" onclick="toggleBubble(1)">
        <a>
            <img src="images/left_bubble_icon.png" style="width:25px;height:auto" />

            <div class='buttonFooText'>
                Bubble 1
            </div>
        </a>
    </div>

    <div class="buttonFoo" onclick="toggleBubble(2)">
        <a>
            <img src="images/right_bubble_icon.png" style="width:25px;height:auto" />
            <div class='buttonFooText'>
                Bubble 2
            </div>
        </a>
    </div>

    <div class="buttonFoo" onclick="chooseKitty()">
        <a>
        <img src="images/disgusting_icons.png" style="height:40px;width:auto;" />
            <div class='buttonFooText'>
                Characters
            </div>
        </a>
    </div>

    <div class="buttonFoo" onclick="chooseBackgroundImage()">
        <a>
            <img src="images/background_icon.png" style="width:50px;height:auto;" />
            <div class='buttonFooText'>
                Backgrounds
            </div>
        </a>
    </div>

    <div class="buttonFoo" onclick="addNewImage()">
        <a>
            <img src="images/drawing.png" style="width:27px;height:auto" />
            <div class='buttonFooText'>
                Add your own image
            </div>
        </a>
    </div>

    <div class="buttonFoo" onclick="downloadImage()">
        <a>
            <img src="images/folder.png" style="width:28px;height:auto" />
            <div class='buttonFooText'>
                Save
            </div>
        </a>
    </div>

    <div class="buttonFoo colorWidget">
        <input type="text" class="color" value="3496CF"
            id="jscolor" onChange='changePanelBGColor()'>
    </div>

</div><!--#controls-->

<div id="header">
    <h1>Foofurple comics!</h1>
    <p>
        Make your own webcomic using amazing Creative Commons and Public Domain images. <a href="about.html">About</a>
    </p>    
    <div style="clear:both;"></div>
</div> <!--#header-->


<div id="addNewImage" class="infoDiv invisPosFixed extraSpace">

    <div class="close"
        onclick="document.getElementById('addNewImage').style.visibility='hidden'">
        <img src="images/close_icon.png" alt="close">
    </div> <!--.close--><br>

    <h3>Add your own image:</h3><br>

    <strong>Image address: </strong>
    <input type="text" id="newImageUrl" value="" style="width:500px;" /> 
    (can be a web address like http://example.com/cute_kitten.png, or a path to a file on your computer like /home/alfredina/images/cute_kitten.png)

    <br><br>

    <input type="radio" name="foo" id="newBgUrl" />Background image (400px by 300px):<br><br>
    <input type="radio" name="foo" id="newKittyUrl" />Character image (100px by 100px):<br><br>

    <input type="submit" value="Add image" onclick="newWebImage(1)" class="submit" /><br><br><br>

<!--
    <h3>From your computer:</h3><br>
    <input type="radio" name="foob" /><strong>Background image (400px by 300px):</strong><br><br>
    <input type="radio" name="foob" /><strong>Character image (100px by 100px):</strong><br><br>
    <input type="file" id="newImageFileLocation"><br><br>
    <input type="submit" value="Add image" onclick="newWebImage(2)" class="submit" /><br><br><br>
-->

</div> <!--#addNewImage-->

<div id="comicPanels"></div>

<div id="imagesMetadata" class="infoDiv">
    <h3>Images:</h3>
    <p id="metadata">.</p>
</div> <!--#imagesMetadata-->

<div id="downloadDiv" class="infoDiv invisPosFixed">
    <img src="images/close_icon.png" alt="close" class="close" onclick="document.getElementById('downloadDiv').style.visibility='hidden'">
    <p>
        <a style="font-size:1.2em;padding:10px;" id="downloadLink">
            <img src="images/save.png">
            Right-click to download your image
        </a>
    </p>
    <p>We suggest you choose a name like 'comic.png'.</p>

    <p>This probably won't work if you have an older browser, or Internet Explorer. Sorry about that.<p>

    <div id="downloadInfo"></div>
</div> <!--#downloadDiv-->


<canvas id="myCanvas" style="visibility:hidden;">
</canvas>

</body>
</html>
